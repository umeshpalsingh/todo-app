{"version":3,"sources":["context/TodoContext.js","context/action.types.js","components/TodoForm.js","context/reducer.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["TodoContext","createContext","ADD_TODO","REMOVE_TODO","TodoForm","useState","todoString","setTodoString","dispatch","useContext","Form","onSubmit","event","preventDefault","alert","todo","id","v4","type","payload","FormGroup","InputGroup","Input","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","state","action","filter","Todos","todos","ListGroup","className","map","ListGroupItem","onClick","App","useReducer","todoReducer","Provider","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAEaA,EAAcC,0BCFdC,EAAW,WACXC,EAAc,c,OCiDZC,EA3CE,WACb,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACOC,EAAYC,qBAAWT,GAAvBQ,SAoBP,OACI,cAACE,EAAA,EAAD,CAAMC,SAnBW,SAAAC,GAEjB,GADAA,EAAMC,iBACY,KAAfP,EACC,OAAOQ,MAAM,uBAGjB,IAAMC,EAAO,CACTT,aACAU,GAAIC,eAERT,EAAS,CACLU,KAAMhB,EACNiB,QAASJ,IAGbR,EAAc,KAId,SACG,cAACa,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIJ,KAAK,OACLK,KAAK,OACLP,GAAG,OACHQ,YAAY,aACZC,MAAOnB,EACPoB,SAAU,SAAAd,GAAK,OAAIL,EAAcK,EAAMe,OAAOF,UAElD,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACI,cAACC,EAAA,EAAD,CAAQC,MAAM,OAAd,2B,QCxCL,WAACC,EAAOC,GACnB,OAAQA,EAAOf,MACX,KAAKhB,EACD,MAAM,GAAN,mBAAW8B,GAAX,CAAkBC,EAAOd,UAE7B,KAAKhB,EACD,OAAO6B,EAAME,QAAO,SAAAnB,GAAI,OAAIA,EAAKC,KAAOiB,EAAOd,WACnD,QACI,OAAOa,I,gCCiBJG,EArBD,WACV,MAA0B1B,qBAAWT,GAA9BoC,EAAP,EAAOA,MAAO5B,EAAd,EAAcA,SAEd,OACI,cAAC6B,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACIF,EAAMG,KAAI,SAAAxB,GAAI,OACX,eAACyB,EAAA,EAAD,WACMzB,EAAKT,WACN,sBAAMgC,UAAU,sBAChBG,QAAS,WACLjC,EAAS,CACLU,KAAMf,EACNgB,QAASJ,EAAKC,MAJtB,SAMG,cAAC,IAAD,QARYD,EAAKC,UCWzB0B,MAdf,WACE,MAA0BC,qBAAWC,EAAa,IAAlD,mBAAOR,EAAP,KAAc5B,EAAd,KAEA,OACE,cAACR,EAAY6C,SAAb,CAAsBpB,MAAO,CAACW,QAAO5B,YAArC,SACE,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,2DACA,cAAC,EAAD,IACA,cAAC,EAAD,UCLOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b1774c3.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const TodoContext = createContext();","export const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\n","import React, {useState, useContext} from \"react\";\r\nimport {Form, InputGroupAddon, FormGroup, InputGroup, Input, Button} from \"reactstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {v4} from \"uuid\";\r\nimport {TodoContext} from \"../context/TodoContext\";\r\nimport {ADD_TODO} from \"../context/action.types\";\r\n\r\nconst TodoForm = () => {\r\n    const [todoString, setTodoString] = useState(\"\");\r\n    const {dispatch} = useContext(TodoContext);\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if(todoString === \"\") {\r\n            return alert(\"Please enter a task\");\r\n        }\r\n\r\n        const todo = {\r\n            todoString,\r\n            id: v4()\r\n        }\r\n        dispatch({\r\n            type: ADD_TODO,\r\n            payload: todo\r\n        })\r\n\r\n        setTodoString(\"\");\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n           <FormGroup>\r\n            <InputGroup>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"todo\"\r\n                    id=\"todo\"\r\n                    placeholder=\"Add a task\"\r\n                    value={todoString}\r\n                    onChange={event => setTodoString(event.target.value)}\r\n                />\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                    <Button color=\"info\">Add</Button>\r\n                </InputGroupAddon>\r\n            </InputGroup>\r\n           </FormGroup>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import { ADD_TODO, REMOVE_TODO } from \"./action.types\";\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return [...state, action.payload];\r\n            \r\n        case REMOVE_TODO:\r\n            return state.filter(todo => todo.id !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, {useContext} from \"react\";\r\nimport {ListGroup, ListGroupItem} from \"reactstrap\";\r\nimport {FaCheckDouble} from \"react-icons/fa\";\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { REMOVE_TODO } from \"../context/action.types\";\r\n\r\nconst Todos = () => {\r\n    const {todos, dispatch} = useContext(TodoContext);\r\n\r\n    return(\r\n        <ListGroup className=\"mt-5 mb-2 items\">\r\n           {todos.map(todo => (\r\n               <ListGroupItem key={todo.id}>\r\n                    {todo.todoString}\r\n                    <span className=\"float-end check-out\"\r\n                    onClick={() => {\r\n                        dispatch({\r\n                            type: REMOVE_TODO,\r\n                            payload: todo.id\r\n                        })\r\n                    }}><FaCheckDouble/></span>\r\n               </ListGroupItem>\r\n           ))} \r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default Todos;\r\n\r\n","import { useReducer, useState, useContext } from 'react';\nimport { Container } from 'reactstrap';\nimport TodoForm from './components/TodoForm';\n\nimport {TodoContext} from \"./context/TodoContext\";\nimport todoReducer from \"./context/reducer\";\nimport './App.css';\nimport Todos from './components/Todos';\n\nfunction App() {\n  const [todos, dispatch] = useReducer(todoReducer, []);\n\n  return (\n    <TodoContext.Provider value={{todos, dispatch}}>\n      <Container fluid>\n        <h1>Todo App with Context API</h1>\n        <Todos />\n        <TodoForm />\n      </Container>\n    </TodoContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}